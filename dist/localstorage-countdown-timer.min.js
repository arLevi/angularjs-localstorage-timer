/*
  angularjs-localstorage-timer v1.0.0
  
*/
function ObjectAssign(t,e){for(var n in e){var o=e[n];t[n]=o}}angular.module("local-storage",[]).service("LocalStorage",["$window","$rootScope",function(t,e){var n=function(t){this.key=t};return n.prototype={get:function(){var e=this,n=JSON.parse(t.localStorage&&t.localStorage.getItem(e.key));return n},set:function(e){var n=this;return t.localStorage&&t.localStorage.setItem(n.key,JSON.stringify(e)),n},removeItem:function(e){var n=this;return t.localStorage&&t.localStorage.removeItem(e),n}},n}]),angular.module("localstorage-countdown-timer",["local-storage"]).factory("CountDownTimer",["$rootScope","LocalStorage","$timeout",function(t,e,n){var o=null,r=null,a={id:"CountDownTimer",counter:60,interval:1e3,last_updated:new Date},c=function(){a.counter>0?(r=n(c,a.interval),a.last_updated=new Date,a.counter--,i()):t.$broadcast("CountDownTimerEndEvent")},i=function(){ObjectAssign(self,a),o.set(a),t.$broadcast("CountDownTimerChangeEvent")},u=function(t){o||(o=new e(t.id||a.id));var n=o.get();n?(a=n,ObjectAssign(self,n)):(t&&ObjectAssign(a,t),a.orig_data={counter:a.counter,interval:a.interval},ObjectAssign(self,a)),i()};return u.prototype={start:function(){var t=a.interval;n.cancel(r),r=n(c,t)},stop:function(){n.cancel(r)},getInfo:function(){return a},getCounter:function(){return a.counter},getLastUpdate:function(){var t=this;return new Date(t.last_updated)},update:function(t,e){a[t]=e},restart:function(){var t=a.orig_data;ObjectAssign(a,t),i(),n.cancel(r),r=n(c,a.interval)},remove:function(){var t=a.id;t&&o.removeItem(t)},save:i},u}]);